<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

    <!-- User 테이블 생성 SQL -->
    <update id="createUserTable">
        CREATE TABLE IF NOT EXISTS USERS (
            ID BIGINT AUTO_INCREMENT PRIMARY KEY,
            USER_ID VARCHAR(50) NOT NULL UNIQUE,
            NAME VARCHAR(100) NOT NULL,
            EMAIL VARCHAR(100) NOT NULL,
            PHONE VARCHAR(20),
            STATUS VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
            CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
            INDEX idx_user_id (USER_ID),
            INDEX idx_email (EMAIL),
            INDEX idx_status (STATUS)
        )
    </update>

    <!-- User 등록 -->
    <insert id="insertUser" parameterType="map">
        INSERT INTO USERS (
            USER_ID,
            NAME,
            EMAIL,
            PHONE,
            STATUS,
            CREATED_AT,
            UPDATED_AT
        ) VALUES (
            #{userId},
            #{name},
            #{email},
            #{phone},
            #{status},
            #{createdAt},
            #{updatedAt}
        )
    </insert>

    <!-- User 조회 -->
    <select id="selectUser" parameterType="map" resultType="map">
        SELECT 
            ID,
            USER_ID,
            NAME,
            EMAIL,
            PHONE,
            STATUS,
            CREATED_AT,
            UPDATED_AT
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    <!-- User 목록 조회 -->
    <select id="selectAllUsers" resultType="map">
        SELECT 
            ID,
            USER_ID,
            NAME,
            EMAIL,
            PHONE,
            STATUS,
            CREATED_AT,
            UPDATED_AT
        FROM USERS
        ORDER BY CREATED_AT DESC
    </select>

    <!-- User 수정 -->
    <update id="updateUser" parameterType="map">
        UPDATE USERS
        SET 
            NAME = #{name},
            EMAIL = #{email},
            PHONE = #{phone},
            STATUS = #{status},
            UPDATED_AT = #{updatedAt}
        WHERE USER_ID = #{userId}
    </update>

    <!-- User 삭제 -->
    <delete id="deleteUser" parameterType="map">
        DELETE FROM USERS
        WHERE USER_ID = #{userId}
    </delete>

    <!-- User 이메일 업데이트 -->
    <update id="updateUserEmail" parameterType="map">
        UPDATE USERS
        SET 
            EMAIL = #{email},
            UPDATED_AT = #{updatedAt}
        WHERE USER_ID = #{userId}
    </update>

    <!-- User 전화번호 업데이트 -->
    <update id="updateUserPhone" parameterType="map">
        UPDATE USERS
        SET 
            PHONE = #{phone},
            UPDATED_AT = #{updatedAt}
        WHERE USER_ID = #{userId}
    </update>

    <!-- 활성 상태 User 조회 -->
    <select id="selectActiveUsers" resultType="map">
        SELECT 
            ID,
            USER_ID,
            NAME,
            EMAIL,
            PHONE,
            STATUS,
            CREATED_AT,
            UPDATED_AT
        FROM USERS
        WHERE STATUS = 'ACTIVE'
        ORDER BY CREATED_AT DESC
    </select>

    <!-- 이메일로 User 조회 -->
    <select id="selectUserByEmail" parameterType="map" resultType="map">
        SELECT 
            ID,
            USER_ID,
            NAME,
            EMAIL,
            PHONE,
            STATUS,
            CREATED_AT,
            UPDATED_AT
        FROM USERS
        WHERE EMAIL = #{email}
    </select>

</mapper>